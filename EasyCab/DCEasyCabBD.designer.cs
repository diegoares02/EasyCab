#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.34003
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EasyCab
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EasyCabBD.mdf")]
	public partial class DCEasyCabBDDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertCliente(Cliente instance);
    partial void UpdateCliente(Cliente instance);
    partial void DeleteCliente(Cliente instance);
    partial void InsertConductor(Conductor instance);
    partial void UpdateConductor(Conductor instance);
    partial void DeleteConductor(Conductor instance);
    partial void InsertDueño(Dueño instance);
    partial void UpdateDueño(Dueño instance);
    partial void DeleteDueño(Dueño instance);
    partial void InsertEmpresa(Empresa instance);
    partial void UpdateEmpresa(Empresa instance);
    partial void DeleteEmpresa(Empresa instance);
    partial void InsertPerfil(Perfil instance);
    partial void UpdatePerfil(Perfil instance);
    partial void DeletePerfil(Perfil instance);
    partial void InsertServicio(Servicio instance);
    partial void UpdateServicio(Servicio instance);
    partial void DeleteServicio(Servicio instance);
    partial void InsertSucursal(Sucursal instance);
    partial void UpdateSucursal(Sucursal instance);
    partial void DeleteSucursal(Sucursal instance);
    partial void InsertUbicacion(Ubicacion instance);
    partial void UpdateUbicacion(Ubicacion instance);
    partial void DeleteUbicacion(Ubicacion instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertVehiculo(Vehiculo instance);
    partial void UpdateVehiculo(Vehiculo instance);
    partial void DeleteVehiculo(Vehiculo instance);
    #endregion
		
		public DCEasyCabBDDataContext() : 
				base(global::EasyCab.Properties.Settings.Default.EasyCabBD_mdfConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DCEasyCabBDDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCEasyCabBDDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCEasyCabBDDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCEasyCabBDDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Cliente> Cliente
		{
			get
			{
				return this.GetTable<Cliente>();
			}
		}
		
		public System.Data.Linq.Table<Conductor> Conductor
		{
			get
			{
				return this.GetTable<Conductor>();
			}
		}
		
		public System.Data.Linq.Table<Dueño> Dueño
		{
			get
			{
				return this.GetTable<Dueño>();
			}
		}
		
		public System.Data.Linq.Table<Empresa> Empresa
		{
			get
			{
				return this.GetTable<Empresa>();
			}
		}
		
		public System.Data.Linq.Table<Perfil> Perfil
		{
			get
			{
				return this.GetTable<Perfil>();
			}
		}
		
		public System.Data.Linq.Table<Servicio> Servicio
		{
			get
			{
				return this.GetTable<Servicio>();
			}
		}
		
		public System.Data.Linq.Table<Sucursal> Sucursal
		{
			get
			{
				return this.GetTable<Sucursal>();
			}
		}
		
		public System.Data.Linq.Table<Ubicacion> Ubicacion
		{
			get
			{
				return this.GetTable<Ubicacion>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuario
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<Vehiculo> Vehiculo
		{
			get
			{
				return this.GetTable<Vehiculo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cliente")]
	public partial class Cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCliente;
		
		private string _Nombre;
		
		private string _Direccion;
		
		private System.Nullable<int> _Telefono;
		
		private System.Nullable<int> _NIT;
		
		private EntitySet<Servicio> _Servicio;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdClienteChanging(int value);
    partial void OnIdClienteChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnTelefonoChanging(System.Nullable<int> value);
    partial void OnTelefonoChanged();
    partial void OnNITChanging(System.Nullable<int> value);
    partial void OnNITChanged();
    #endregion
		
		public Cliente()
		{
			this._Servicio = new EntitySet<Servicio>(new Action<Servicio>(this.attach_Servicio), new Action<Servicio>(this.detach_Servicio));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCliente", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdCliente
		{
			get
			{
				return this._IdCliente;
			}
			set
			{
				if ((this._IdCliente != value))
				{
					this.OnIdClienteChanging(value);
					this.SendPropertyChanging();
					this._IdCliente = value;
					this.SendPropertyChanged("IdCliente");
					this.OnIdClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(50)")]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="Int")]
		public System.Nullable<int> Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIT", DbType="Int")]
		public System.Nullable<int> NIT
		{
			get
			{
				return this._NIT;
			}
			set
			{
				if ((this._NIT != value))
				{
					this.OnNITChanging(value);
					this.SendPropertyChanging();
					this._NIT = value;
					this.SendPropertyChanged("NIT");
					this.OnNITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Servicio", Storage="_Servicio", ThisKey="IdCliente", OtherKey="IdCliente")]
		public EntitySet<Servicio> Servicio
		{
			get
			{
				return this._Servicio;
			}
			set
			{
				this._Servicio.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Servicio(Servicio entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Servicio(Servicio entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Conductor")]
	public partial class Conductor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdConductor;
		
		private string _Nombre;
		
		private string _Paterno;
		
		private string _Materno;
		
		private string _Direccion;
		
		private System.Nullable<int> _Telefono;
		
		private System.Nullable<int> _Celular;
		
		private System.DateTime _Fecha_Nac;
		
		private System.Data.Linq.Binary _Foto;
		
		private string _Categoria;
		
		private System.DateTime _Fecha_Exp;
		
		private string _Procedencia;
		
		private System.Nullable<double> _Comision;
		
		private EntitySet<Servicio> _Servicio;
		
		private EntitySet<Ubicacion> _Ubicacion;
		
		private EntitySet<Vehiculo> _Vehiculo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdConductorChanging(int value);
    partial void OnIdConductorChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnPaternoChanging(string value);
    partial void OnPaternoChanged();
    partial void OnMaternoChanging(string value);
    partial void OnMaternoChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnTelefonoChanging(System.Nullable<int> value);
    partial void OnTelefonoChanged();
    partial void OnCelularChanging(System.Nullable<int> value);
    partial void OnCelularChanged();
    partial void OnFecha_NacChanging(System.DateTime value);
    partial void OnFecha_NacChanged();
    partial void OnFotoChanging(System.Data.Linq.Binary value);
    partial void OnFotoChanged();
    partial void OnCategoriaChanging(string value);
    partial void OnCategoriaChanged();
    partial void OnFecha_ExpChanging(System.DateTime value);
    partial void OnFecha_ExpChanged();
    partial void OnProcedenciaChanging(string value);
    partial void OnProcedenciaChanged();
    partial void OnComisionChanging(System.Nullable<double> value);
    partial void OnComisionChanged();
    #endregion
		
		public Conductor()
		{
			this._Servicio = new EntitySet<Servicio>(new Action<Servicio>(this.attach_Servicio), new Action<Servicio>(this.detach_Servicio));
			this._Ubicacion = new EntitySet<Ubicacion>(new Action<Ubicacion>(this.attach_Ubicacion), new Action<Ubicacion>(this.detach_Ubicacion));
			this._Vehiculo = new EntitySet<Vehiculo>(new Action<Vehiculo>(this.attach_Vehiculo), new Action<Vehiculo>(this.detach_Vehiculo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdConductor", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdConductor
		{
			get
			{
				return this._IdConductor;
			}
			set
			{
				if ((this._IdConductor != value))
				{
					this.OnIdConductorChanging(value);
					this.SendPropertyChanging();
					this._IdConductor = value;
					this.SendPropertyChanged("IdConductor");
					this.OnIdConductorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paterno", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Paterno
		{
			get
			{
				return this._Paterno;
			}
			set
			{
				if ((this._Paterno != value))
				{
					this.OnPaternoChanging(value);
					this.SendPropertyChanging();
					this._Paterno = value;
					this.SendPropertyChanged("Paterno");
					this.OnPaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Materno", DbType="VarChar(50)")]
		public string Materno
		{
			get
			{
				return this._Materno;
			}
			set
			{
				if ((this._Materno != value))
				{
					this.OnMaternoChanging(value);
					this.SendPropertyChanging();
					this._Materno = value;
					this.SendPropertyChanged("Materno");
					this.OnMaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="Int")]
		public System.Nullable<int> Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Celular", DbType="Int")]
		public System.Nullable<int> Celular
		{
			get
			{
				return this._Celular;
			}
			set
			{
				if ((this._Celular != value))
				{
					this.OnCelularChanging(value);
					this.SendPropertyChanging();
					this._Celular = value;
					this.SendPropertyChanged("Celular");
					this.OnCelularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha_Nac", DbType="Date NOT NULL")]
		public System.DateTime Fecha_Nac
		{
			get
			{
				return this._Fecha_Nac;
			}
			set
			{
				if ((this._Fecha_Nac != value))
				{
					this.OnFecha_NacChanging(value);
					this.SendPropertyChanging();
					this._Fecha_Nac = value;
					this.SendPropertyChanged("Fecha_Nac");
					this.OnFecha_NacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Foto", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Foto
		{
			get
			{
				return this._Foto;
			}
			set
			{
				if ((this._Foto != value))
				{
					this.OnFotoChanging(value);
					this.SendPropertyChanging();
					this._Foto = value;
					this.SendPropertyChanged("Foto");
					this.OnFotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categoria", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Categoria
		{
			get
			{
				return this._Categoria;
			}
			set
			{
				if ((this._Categoria != value))
				{
					this.OnCategoriaChanging(value);
					this.SendPropertyChanging();
					this._Categoria = value;
					this.SendPropertyChanged("Categoria");
					this.OnCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha_Exp", DbType="Date NOT NULL")]
		public System.DateTime Fecha_Exp
		{
			get
			{
				return this._Fecha_Exp;
			}
			set
			{
				if ((this._Fecha_Exp != value))
				{
					this.OnFecha_ExpChanging(value);
					this.SendPropertyChanging();
					this._Fecha_Exp = value;
					this.SendPropertyChanged("Fecha_Exp");
					this.OnFecha_ExpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Procedencia", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Procedencia
		{
			get
			{
				return this._Procedencia;
			}
			set
			{
				if ((this._Procedencia != value))
				{
					this.OnProcedenciaChanging(value);
					this.SendPropertyChanging();
					this._Procedencia = value;
					this.SendPropertyChanged("Procedencia");
					this.OnProcedenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comision", DbType="Float")]
		public System.Nullable<double> Comision
		{
			get
			{
				return this._Comision;
			}
			set
			{
				if ((this._Comision != value))
				{
					this.OnComisionChanging(value);
					this.SendPropertyChanging();
					this._Comision = value;
					this.SendPropertyChanged("Comision");
					this.OnComisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Conductor_Servicio", Storage="_Servicio", ThisKey="IdConductor", OtherKey="IdConductor")]
		public EntitySet<Servicio> Servicio
		{
			get
			{
				return this._Servicio;
			}
			set
			{
				this._Servicio.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Conductor_Ubicacion", Storage="_Ubicacion", ThisKey="IdConductor", OtherKey="IdConductor")]
		public EntitySet<Ubicacion> Ubicacion
		{
			get
			{
				return this._Ubicacion;
			}
			set
			{
				this._Ubicacion.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Conductor_Vehiculo", Storage="_Vehiculo", ThisKey="IdConductor", OtherKey="IdConductor")]
		public EntitySet<Vehiculo> Vehiculo
		{
			get
			{
				return this._Vehiculo;
			}
			set
			{
				this._Vehiculo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Servicio(Servicio entity)
		{
			this.SendPropertyChanging();
			entity.Conductor = this;
		}
		
		private void detach_Servicio(Servicio entity)
		{
			this.SendPropertyChanging();
			entity.Conductor = null;
		}
		
		private void attach_Ubicacion(Ubicacion entity)
		{
			this.SendPropertyChanging();
			entity.Conductor = this;
		}
		
		private void detach_Ubicacion(Ubicacion entity)
		{
			this.SendPropertyChanging();
			entity.Conductor = null;
		}
		
		private void attach_Vehiculo(Vehiculo entity)
		{
			this.SendPropertyChanging();
			entity.Conductor = this;
		}
		
		private void detach_Vehiculo(Vehiculo entity)
		{
			this.SendPropertyChanging();
			entity.Conductor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dueño")]
	public partial class Dueño : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdDueño;
		
		private string _Nombre;
		
		private string _Paterno;
		
		private string _Materno;
		
		private string _Direccion;
		
		private System.Nullable<int> _Telefono;
		
		private EntitySet<Vehiculo> _Vehiculo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDueñoChanging(int value);
    partial void OnIdDueñoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnPaternoChanging(string value);
    partial void OnPaternoChanged();
    partial void OnMaternoChanging(string value);
    partial void OnMaternoChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnTelefonoChanging(System.Nullable<int> value);
    partial void OnTelefonoChanged();
    #endregion
		
		public Dueño()
		{
			this._Vehiculo = new EntitySet<Vehiculo>(new Action<Vehiculo>(this.attach_Vehiculo), new Action<Vehiculo>(this.detach_Vehiculo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDueño", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdDueño
		{
			get
			{
				return this._IdDueño;
			}
			set
			{
				if ((this._IdDueño != value))
				{
					this.OnIdDueñoChanging(value);
					this.SendPropertyChanging();
					this._IdDueño = value;
					this.SendPropertyChanged("IdDueño");
					this.OnIdDueñoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paterno", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Paterno
		{
			get
			{
				return this._Paterno;
			}
			set
			{
				if ((this._Paterno != value))
				{
					this.OnPaternoChanging(value);
					this.SendPropertyChanging();
					this._Paterno = value;
					this.SendPropertyChanged("Paterno");
					this.OnPaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Materno", DbType="VarChar(50)")]
		public string Materno
		{
			get
			{
				return this._Materno;
			}
			set
			{
				if ((this._Materno != value))
				{
					this.OnMaternoChanging(value);
					this.SendPropertyChanging();
					this._Materno = value;
					this.SendPropertyChanged("Materno");
					this.OnMaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(50)")]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="Int")]
		public System.Nullable<int> Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dueño_Vehiculo", Storage="_Vehiculo", ThisKey="IdDueño", OtherKey="IdDueño")]
		public EntitySet<Vehiculo> Vehiculo
		{
			get
			{
				return this._Vehiculo;
			}
			set
			{
				this._Vehiculo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Vehiculo(Vehiculo entity)
		{
			this.SendPropertyChanging();
			entity.Dueño = this;
		}
		
		private void detach_Vehiculo(Vehiculo entity)
		{
			this.SendPropertyChanging();
			entity.Dueño = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Empresa")]
	public partial class Empresa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdEmpresa;
		
		private int _IdUsuario;
		
		private string _Nombre;
		
		private string _CodParada;
		
		private int _NIT;
		
		private string _CodATT;
		
		private System.Nullable<double> _Frecuencia;
		
		private System.Data.Linq.Binary _Logo;
		
		private EntitySet<Sucursal> _Sucursal;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEmpresaChanging(int value);
    partial void OnIdEmpresaChanged();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnCodParadaChanging(string value);
    partial void OnCodParadaChanged();
    partial void OnNITChanging(int value);
    partial void OnNITChanged();
    partial void OnCodATTChanging(string value);
    partial void OnCodATTChanged();
    partial void OnFrecuenciaChanging(System.Nullable<double> value);
    partial void OnFrecuenciaChanged();
    partial void OnLogoChanging(System.Data.Linq.Binary value);
    partial void OnLogoChanged();
    #endregion
		
		public Empresa()
		{
			this._Sucursal = new EntitySet<Sucursal>(new Action<Sucursal>(this.attach_Sucursal), new Action<Sucursal>(this.detach_Sucursal));
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEmpresa", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdEmpresa
		{
			get
			{
				return this._IdEmpresa;
			}
			set
			{
				if ((this._IdEmpresa != value))
				{
					this.OnIdEmpresaChanging(value);
					this.SendPropertyChanging();
					this._IdEmpresa = value;
					this.SendPropertyChanged("IdEmpresa");
					this.OnIdEmpresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int NOT NULL")]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodParada", DbType="VarChar(50)")]
		public string CodParada
		{
			get
			{
				return this._CodParada;
			}
			set
			{
				if ((this._CodParada != value))
				{
					this.OnCodParadaChanging(value);
					this.SendPropertyChanging();
					this._CodParada = value;
					this.SendPropertyChanged("CodParada");
					this.OnCodParadaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIT", DbType="Int NOT NULL")]
		public int NIT
		{
			get
			{
				return this._NIT;
			}
			set
			{
				if ((this._NIT != value))
				{
					this.OnNITChanging(value);
					this.SendPropertyChanging();
					this._NIT = value;
					this.SendPropertyChanged("NIT");
					this.OnNITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodATT", DbType="VarChar(50)")]
		public string CodATT
		{
			get
			{
				return this._CodATT;
			}
			set
			{
				if ((this._CodATT != value))
				{
					this.OnCodATTChanging(value);
					this.SendPropertyChanging();
					this._CodATT = value;
					this.SendPropertyChanged("CodATT");
					this.OnCodATTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Frecuencia", DbType="Float")]
		public System.Nullable<double> Frecuencia
		{
			get
			{
				return this._Frecuencia;
			}
			set
			{
				if ((this._Frecuencia != value))
				{
					this.OnFrecuenciaChanging(value);
					this.SendPropertyChanging();
					this._Frecuencia = value;
					this.SendPropertyChanged("Frecuencia");
					this.OnFrecuenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this.OnLogoChanging(value);
					this.SendPropertyChanging();
					this._Logo = value;
					this.SendPropertyChanged("Logo");
					this.OnLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresa_Sucursal", Storage="_Sucursal", ThisKey="IdEmpresa", OtherKey="IdEmpresa")]
		public EntitySet<Sucursal> Sucursal
		{
			get
			{
				return this._Sucursal;
			}
			set
			{
				this._Sucursal.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Empresa", Storage="_Usuario", ThisKey="IdUsuario", OtherKey="IdUsuario", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Empresa.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Empresa.Add(this);
						this._IdUsuario = value.IdUsuario;
					}
					else
					{
						this._IdUsuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sucursal(Sucursal entity)
		{
			this.SendPropertyChanging();
			entity.Empresa = this;
		}
		
		private void detach_Sucursal(Sucursal entity)
		{
			this.SendPropertyChanging();
			entity.Empresa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Perfil")]
	public partial class Perfil : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdPerfil;
		
		private string _Nombre;
		
		private EntitySet<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPerfilChanging(int value);
    partial void OnIdPerfilChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public Perfil()
		{
			this._Usuario = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario), new Action<Usuario>(this.detach_Usuario));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPerfil", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdPerfil
		{
			get
			{
				return this._IdPerfil;
			}
			set
			{
				if ((this._IdPerfil != value))
				{
					this.OnIdPerfilChanging(value);
					this.SendPropertyChanging();
					this._IdPerfil = value;
					this.SendPropertyChanged("IdPerfil");
					this.OnIdPerfilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Perfil_Usuario", Storage="_Usuario", ThisKey="IdPerfil", OtherKey="IdPerfil")]
		public EntitySet<Usuario> Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				this._Usuario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Perfil = this;
		}
		
		private void detach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Perfil = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Servicio")]
	public partial class Servicio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdServicio;
		
		private int _IdUsuario;
		
		private int _IdConductor;
		
		private System.DateTime _Fecha;
		
		private int _IdCliente;
		
		private string _DireccionOrigen;
		
		private string _DireccionDestino;
		
		private System.Nullable<int> _Tarifa;
		
		private EntityRef<Cliente> _Cliente;
		
		private EntityRef<Conductor> _Conductor;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdServicioChanging(int value);
    partial void OnIdServicioChanged();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnIdConductorChanging(int value);
    partial void OnIdConductorChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnIdClienteChanging(int value);
    partial void OnIdClienteChanged();
    partial void OnDireccionOrigenChanging(string value);
    partial void OnDireccionOrigenChanged();
    partial void OnDireccionDestinoChanging(string value);
    partial void OnDireccionDestinoChanged();
    partial void OnTarifaChanging(System.Nullable<int> value);
    partial void OnTarifaChanged();
    #endregion
		
		public Servicio()
		{
			this._Cliente = default(EntityRef<Cliente>);
			this._Conductor = default(EntityRef<Conductor>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdServicio", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdServicio
		{
			get
			{
				return this._IdServicio;
			}
			set
			{
				if ((this._IdServicio != value))
				{
					this.OnIdServicioChanging(value);
					this.SendPropertyChanging();
					this._IdServicio = value;
					this.SendPropertyChanged("IdServicio");
					this.OnIdServicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int NOT NULL")]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdConductor", DbType="Int NOT NULL")]
		public int IdConductor
		{
			get
			{
				return this._IdConductor;
			}
			set
			{
				if ((this._IdConductor != value))
				{
					if (this._Conductor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdConductorChanging(value);
					this.SendPropertyChanging();
					this._IdConductor = value;
					this.SendPropertyChanged("IdConductor");
					this.OnIdConductorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Date NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCliente", DbType="Int NOT NULL")]
		public int IdCliente
		{
			get
			{
				return this._IdCliente;
			}
			set
			{
				if ((this._IdCliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdClienteChanging(value);
					this.SendPropertyChanging();
					this._IdCliente = value;
					this.SendPropertyChanged("IdCliente");
					this.OnIdClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DireccionOrigen", DbType="VarChar(50)")]
		public string DireccionOrigen
		{
			get
			{
				return this._DireccionOrigen;
			}
			set
			{
				if ((this._DireccionOrigen != value))
				{
					this.OnDireccionOrigenChanging(value);
					this.SendPropertyChanging();
					this._DireccionOrigen = value;
					this.SendPropertyChanged("DireccionOrigen");
					this.OnDireccionOrigenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DireccionDestino", DbType="VarChar(50)")]
		public string DireccionDestino
		{
			get
			{
				return this._DireccionDestino;
			}
			set
			{
				if ((this._DireccionDestino != value))
				{
					this.OnDireccionDestinoChanging(value);
					this.SendPropertyChanging();
					this._DireccionDestino = value;
					this.SendPropertyChanged("DireccionDestino");
					this.OnDireccionDestinoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tarifa", DbType="Int")]
		public System.Nullable<int> Tarifa
		{
			get
			{
				return this._Tarifa;
			}
			set
			{
				if ((this._Tarifa != value))
				{
					this.OnTarifaChanging(value);
					this.SendPropertyChanging();
					this._Tarifa = value;
					this.SendPropertyChanged("Tarifa");
					this.OnTarifaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Servicio", Storage="_Cliente", ThisKey="IdCliente", OtherKey="IdCliente", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Servicio.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Servicio.Add(this);
						this._IdCliente = value.IdCliente;
					}
					else
					{
						this._IdCliente = default(int);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Conductor_Servicio", Storage="_Conductor", ThisKey="IdConductor", OtherKey="IdConductor", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Conductor Conductor
		{
			get
			{
				return this._Conductor.Entity;
			}
			set
			{
				Conductor previousValue = this._Conductor.Entity;
				if (((previousValue != value) 
							|| (this._Conductor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Conductor.Entity = null;
						previousValue.Servicio.Remove(this);
					}
					this._Conductor.Entity = value;
					if ((value != null))
					{
						value.Servicio.Add(this);
						this._IdConductor = value.IdConductor;
					}
					else
					{
						this._IdConductor = default(int);
					}
					this.SendPropertyChanged("Conductor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Servicio", Storage="_Usuario", ThisKey="IdUsuario", OtherKey="IdUsuario", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Servicio.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Servicio.Add(this);
						this._IdUsuario = value.IdUsuario;
					}
					else
					{
						this._IdUsuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sucursal")]
	public partial class Sucursal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdSucursal;
		
		private int _IdEmpresa;
		
		private string _Direccion;
		
		private System.Nullable<int> _Telefono;
		
		private EntityRef<Empresa> _Empresa;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSucursalChanging(int value);
    partial void OnIdSucursalChanged();
    partial void OnIdEmpresaChanging(int value);
    partial void OnIdEmpresaChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnTelefonoChanging(System.Nullable<int> value);
    partial void OnTelefonoChanged();
    #endregion
		
		public Sucursal()
		{
			this._Empresa = default(EntityRef<Empresa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSucursal", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdSucursal
		{
			get
			{
				return this._IdSucursal;
			}
			set
			{
				if ((this._IdSucursal != value))
				{
					this.OnIdSucursalChanging(value);
					this.SendPropertyChanging();
					this._IdSucursal = value;
					this.SendPropertyChanged("IdSucursal");
					this.OnIdSucursalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEmpresa", DbType="Int NOT NULL")]
		public int IdEmpresa
		{
			get
			{
				return this._IdEmpresa;
			}
			set
			{
				if ((this._IdEmpresa != value))
				{
					if (this._Empresa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEmpresaChanging(value);
					this.SendPropertyChanging();
					this._IdEmpresa = value;
					this.SendPropertyChanged("IdEmpresa");
					this.OnIdEmpresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(50)")]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="Int")]
		public System.Nullable<int> Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresa_Sucursal", Storage="_Empresa", ThisKey="IdEmpresa", OtherKey="IdEmpresa", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Empresa Empresa
		{
			get
			{
				return this._Empresa.Entity;
			}
			set
			{
				Empresa previousValue = this._Empresa.Entity;
				if (((previousValue != value) 
							|| (this._Empresa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empresa.Entity = null;
						previousValue.Sucursal.Remove(this);
					}
					this._Empresa.Entity = value;
					if ((value != null))
					{
						value.Sucursal.Add(this);
						this._IdEmpresa = value.IdEmpresa;
					}
					else
					{
						this._IdEmpresa = default(int);
					}
					this.SendPropertyChanged("Empresa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ubicacion")]
	public partial class Ubicacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdUbicacion;
		
		private int _IdConductor;
		
		private double _Latitud;
		
		private double _Longitud;
		
		private System.DateTime _Fecha;
		
		private EntityRef<Conductor> _Conductor;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdUbicacionChanging(int value);
    partial void OnIdUbicacionChanged();
    partial void OnIdConductorChanging(int value);
    partial void OnIdConductorChanged();
    partial void OnLatitudChanging(double value);
    partial void OnLatitudChanged();
    partial void OnLongitudChanging(double value);
    partial void OnLongitudChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    #endregion
		
		public Ubicacion()
		{
			this._Conductor = default(EntityRef<Conductor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUbicacion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdUbicacion
		{
			get
			{
				return this._IdUbicacion;
			}
			set
			{
				if ((this._IdUbicacion != value))
				{
					this.OnIdUbicacionChanging(value);
					this.SendPropertyChanging();
					this._IdUbicacion = value;
					this.SendPropertyChanged("IdUbicacion");
					this.OnIdUbicacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdConductor", DbType="Int NOT NULL")]
		public int IdConductor
		{
			get
			{
				return this._IdConductor;
			}
			set
			{
				if ((this._IdConductor != value))
				{
					if (this._Conductor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdConductorChanging(value);
					this.SendPropertyChanging();
					this._IdConductor = value;
					this.SendPropertyChanged("IdConductor");
					this.OnIdConductorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitud", DbType="Float NOT NULL")]
		public double Latitud
		{
			get
			{
				return this._Latitud;
			}
			set
			{
				if ((this._Latitud != value))
				{
					this.OnLatitudChanging(value);
					this.SendPropertyChanging();
					this._Latitud = value;
					this.SendPropertyChanged("Latitud");
					this.OnLatitudChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitud", DbType="Float NOT NULL")]
		public double Longitud
		{
			get
			{
				return this._Longitud;
			}
			set
			{
				if ((this._Longitud != value))
				{
					this.OnLongitudChanging(value);
					this.SendPropertyChanging();
					this._Longitud = value;
					this.SendPropertyChanged("Longitud");
					this.OnLongitudChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Conductor_Ubicacion", Storage="_Conductor", ThisKey="IdConductor", OtherKey="IdConductor", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Conductor Conductor
		{
			get
			{
				return this._Conductor.Entity;
			}
			set
			{
				Conductor previousValue = this._Conductor.Entity;
				if (((previousValue != value) 
							|| (this._Conductor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Conductor.Entity = null;
						previousValue.Ubicacion.Remove(this);
					}
					this._Conductor.Entity = value;
					if ((value != null))
					{
						value.Ubicacion.Add(this);
						this._IdConductor = value.IdConductor;
					}
					else
					{
						this._IdConductor = default(int);
					}
					this.SendPropertyChanged("Conductor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdUsuario;
		
		private string _Nombre;
		
		private string _Paterno;
		
		private string _Materno;
		
		private string _Direccion;
		
		private int _Telefono;
		
		private int _Celular;
		
		private System.DateTime _Fech_Nac;
		
		private System.Data.Linq.Binary _Foto;
		
		private string _Username;
		
		private string _Password;
		
		private int _IdPerfil;
		
		private string _Procedencia;
		
		private string _Email;
		
		private EntitySet<Empresa> _Empresa;
		
		private EntitySet<Servicio> _Servicio;
		
		private EntityRef<Perfil> _Perfil;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnPaternoChanging(string value);
    partial void OnPaternoChanged();
    partial void OnMaternoChanging(string value);
    partial void OnMaternoChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnTelefonoChanging(int value);
    partial void OnTelefonoChanged();
    partial void OnCelularChanging(int value);
    partial void OnCelularChanged();
    partial void OnFech_NacChanging(System.DateTime value);
    partial void OnFech_NacChanged();
    partial void OnFotoChanging(System.Data.Linq.Binary value);
    partial void OnFotoChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnIdPerfilChanging(int value);
    partial void OnIdPerfilChanged();
    partial void OnProcedenciaChanging(string value);
    partial void OnProcedenciaChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Usuario()
		{
			this._Empresa = new EntitySet<Empresa>(new Action<Empresa>(this.attach_Empresa), new Action<Empresa>(this.detach_Empresa));
			this._Servicio = new EntitySet<Servicio>(new Action<Servicio>(this.attach_Servicio), new Action<Servicio>(this.detach_Servicio));
			this._Perfil = default(EntityRef<Perfil>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paterno", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Paterno
		{
			get
			{
				return this._Paterno;
			}
			set
			{
				if ((this._Paterno != value))
				{
					this.OnPaternoChanging(value);
					this.SendPropertyChanging();
					this._Paterno = value;
					this.SendPropertyChanged("Paterno");
					this.OnPaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Materno", DbType="VarChar(50)")]
		public string Materno
		{
			get
			{
				return this._Materno;
			}
			set
			{
				if ((this._Materno != value))
				{
					this.OnMaternoChanging(value);
					this.SendPropertyChanging();
					this._Materno = value;
					this.SendPropertyChanged("Materno");
					this.OnMaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="Int NOT NULL")]
		public int Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Celular", DbType="Int NOT NULL")]
		public int Celular
		{
			get
			{
				return this._Celular;
			}
			set
			{
				if ((this._Celular != value))
				{
					this.OnCelularChanging(value);
					this.SendPropertyChanging();
					this._Celular = value;
					this.SendPropertyChanged("Celular");
					this.OnCelularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fech_Nac", DbType="Date NOT NULL")]
		public System.DateTime Fech_Nac
		{
			get
			{
				return this._Fech_Nac;
			}
			set
			{
				if ((this._Fech_Nac != value))
				{
					this.OnFech_NacChanging(value);
					this.SendPropertyChanging();
					this._Fech_Nac = value;
					this.SendPropertyChanged("Fech_Nac");
					this.OnFech_NacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Foto", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Foto
		{
			get
			{
				return this._Foto;
			}
			set
			{
				if ((this._Foto != value))
				{
					this.OnFotoChanging(value);
					this.SendPropertyChanging();
					this._Foto = value;
					this.SendPropertyChanged("Foto");
					this.OnFotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPerfil", DbType="Int NOT NULL")]
		public int IdPerfil
		{
			get
			{
				return this._IdPerfil;
			}
			set
			{
				if ((this._IdPerfil != value))
				{
					if (this._Perfil.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPerfilChanging(value);
					this.SendPropertyChanging();
					this._IdPerfil = value;
					this.SendPropertyChanged("IdPerfil");
					this.OnIdPerfilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Procedencia", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Procedencia
		{
			get
			{
				return this._Procedencia;
			}
			set
			{
				if ((this._Procedencia != value))
				{
					this.OnProcedenciaChanging(value);
					this.SendPropertyChanging();
					this._Procedencia = value;
					this.SendPropertyChanged("Procedencia");
					this.OnProcedenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Empresa", Storage="_Empresa", ThisKey="IdUsuario", OtherKey="IdUsuario")]
		public EntitySet<Empresa> Empresa
		{
			get
			{
				return this._Empresa;
			}
			set
			{
				this._Empresa.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Servicio", Storage="_Servicio", ThisKey="IdUsuario", OtherKey="IdUsuario")]
		public EntitySet<Servicio> Servicio
		{
			get
			{
				return this._Servicio;
			}
			set
			{
				this._Servicio.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Perfil_Usuario", Storage="_Perfil", ThisKey="IdPerfil", OtherKey="IdPerfil", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Perfil Perfil
		{
			get
			{
				return this._Perfil.Entity;
			}
			set
			{
				Perfil previousValue = this._Perfil.Entity;
				if (((previousValue != value) 
							|| (this._Perfil.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Perfil.Entity = null;
						previousValue.Usuario.Remove(this);
					}
					this._Perfil.Entity = value;
					if ((value != null))
					{
						value.Usuario.Add(this);
						this._IdPerfil = value.IdPerfil;
					}
					else
					{
						this._IdPerfil = default(int);
					}
					this.SendPropertyChanged("Perfil");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Empresa(Empresa entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Empresa(Empresa entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_Servicio(Servicio entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Servicio(Servicio entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vehiculo")]
	public partial class Vehiculo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdVehiculo;
		
		private int _IdDueño;
		
		private int _IdConductor;
		
		private string _Marca;
		
		private int _Modelo;
		
		private string _NroPlaca;
		
		private string _NroChasis;
		
		private string _SOAT;
		
		private System.Data.Linq.Binary _Foto;
		
		private EntityRef<Conductor> _Conductor;
		
		private EntityRef<Dueño> _Dueño;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdVehiculoChanging(int value);
    partial void OnIdVehiculoChanged();
    partial void OnIdDueñoChanging(int value);
    partial void OnIdDueñoChanged();
    partial void OnIdConductorChanging(int value);
    partial void OnIdConductorChanged();
    partial void OnMarcaChanging(string value);
    partial void OnMarcaChanged();
    partial void OnModeloChanging(int value);
    partial void OnModeloChanged();
    partial void OnNroPlacaChanging(string value);
    partial void OnNroPlacaChanged();
    partial void OnNroChasisChanging(string value);
    partial void OnNroChasisChanged();
    partial void OnSOATChanging(string value);
    partial void OnSOATChanged();
    partial void OnFotoChanging(System.Data.Linq.Binary value);
    partial void OnFotoChanged();
    #endregion
		
		public Vehiculo()
		{
			this._Conductor = default(EntityRef<Conductor>);
			this._Dueño = default(EntityRef<Dueño>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVehiculo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdVehiculo
		{
			get
			{
				return this._IdVehiculo;
			}
			set
			{
				if ((this._IdVehiculo != value))
				{
					this.OnIdVehiculoChanging(value);
					this.SendPropertyChanging();
					this._IdVehiculo = value;
					this.SendPropertyChanged("IdVehiculo");
					this.OnIdVehiculoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDueño", DbType="Int NOT NULL")]
		public int IdDueño
		{
			get
			{
				return this._IdDueño;
			}
			set
			{
				if ((this._IdDueño != value))
				{
					if (this._Dueño.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDueñoChanging(value);
					this.SendPropertyChanging();
					this._IdDueño = value;
					this.SendPropertyChanged("IdDueño");
					this.OnIdDueñoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdConductor", DbType="Int NOT NULL")]
		public int IdConductor
		{
			get
			{
				return this._IdConductor;
			}
			set
			{
				if ((this._IdConductor != value))
				{
					if (this._Conductor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdConductorChanging(value);
					this.SendPropertyChanging();
					this._IdConductor = value;
					this.SendPropertyChanged("IdConductor");
					this.OnIdConductorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marca", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Marca
		{
			get
			{
				return this._Marca;
			}
			set
			{
				if ((this._Marca != value))
				{
					this.OnMarcaChanging(value);
					this.SendPropertyChanging();
					this._Marca = value;
					this.SendPropertyChanged("Marca");
					this.OnMarcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modelo", DbType="Int NOT NULL")]
		public int Modelo
		{
			get
			{
				return this._Modelo;
			}
			set
			{
				if ((this._Modelo != value))
				{
					this.OnModeloChanging(value);
					this.SendPropertyChanging();
					this._Modelo = value;
					this.SendPropertyChanged("Modelo");
					this.OnModeloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NroPlaca", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NroPlaca
		{
			get
			{
				return this._NroPlaca;
			}
			set
			{
				if ((this._NroPlaca != value))
				{
					this.OnNroPlacaChanging(value);
					this.SendPropertyChanging();
					this._NroPlaca = value;
					this.SendPropertyChanged("NroPlaca");
					this.OnNroPlacaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NroChasis", DbType="VarChar(50)")]
		public string NroChasis
		{
			get
			{
				return this._NroChasis;
			}
			set
			{
				if ((this._NroChasis != value))
				{
					this.OnNroChasisChanging(value);
					this.SendPropertyChanging();
					this._NroChasis = value;
					this.SendPropertyChanged("NroChasis");
					this.OnNroChasisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOAT", DbType="VarChar(50)")]
		public string SOAT
		{
			get
			{
				return this._SOAT;
			}
			set
			{
				if ((this._SOAT != value))
				{
					this.OnSOATChanging(value);
					this.SendPropertyChanging();
					this._SOAT = value;
					this.SendPropertyChanged("SOAT");
					this.OnSOATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Foto", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Foto
		{
			get
			{
				return this._Foto;
			}
			set
			{
				if ((this._Foto != value))
				{
					this.OnFotoChanging(value);
					this.SendPropertyChanging();
					this._Foto = value;
					this.SendPropertyChanged("Foto");
					this.OnFotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Conductor_Vehiculo", Storage="_Conductor", ThisKey="IdConductor", OtherKey="IdConductor", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Conductor Conductor
		{
			get
			{
				return this._Conductor.Entity;
			}
			set
			{
				Conductor previousValue = this._Conductor.Entity;
				if (((previousValue != value) 
							|| (this._Conductor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Conductor.Entity = null;
						previousValue.Vehiculo.Remove(this);
					}
					this._Conductor.Entity = value;
					if ((value != null))
					{
						value.Vehiculo.Add(this);
						this._IdConductor = value.IdConductor;
					}
					else
					{
						this._IdConductor = default(int);
					}
					this.SendPropertyChanged("Conductor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dueño_Vehiculo", Storage="_Dueño", ThisKey="IdDueño", OtherKey="IdDueño", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Dueño Dueño
		{
			get
			{
				return this._Dueño.Entity;
			}
			set
			{
				Dueño previousValue = this._Dueño.Entity;
				if (((previousValue != value) 
							|| (this._Dueño.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dueño.Entity = null;
						previousValue.Vehiculo.Remove(this);
					}
					this._Dueño.Entity = value;
					if ((value != null))
					{
						value.Vehiculo.Add(this);
						this._IdDueño = value.IdDueño;
					}
					else
					{
						this._IdDueño = default(int);
					}
					this.SendPropertyChanged("Dueño");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
